<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="es" original="../CSharpCompilerExtensionsResources.resx">
    <body>
      <trans-unit id="Allow_bank_line_after_colon_in_constructor_initializer">
        <source>Allow blank line after colon in constructor initializer</source>
        <target state="new">Allow blank line after colon in constructor initializer</target>
        <note />
      </trans-unit>
      <trans-unit id="Allow_blank_lines_between_consecutive_braces">
        <source>Allow blank lines between consecutive braces</source>
        <target state="new">Allow blank lines between consecutive braces</target>
        <note />
      </trans-unit>
      <trans-unit id="Allow_embedded_statements_on_same_line">
        <source>Allow embedded statements on same line</source>
        <target state="new">Allow embedded statements on same line</target>
        <note />
      </trans-unit>
      <trans-unit id="Avoid_expression_statements_that_implicitly_ignore_value">
        <source>Avoid expression statements that implicitly ignore value</source>
        <target state="new">Avoid expression statements that implicitly ignore value</target>
        <note />
      </trans-unit>
      <trans-unit id="Avoid_unused_value_assignments">
        <source>Avoid unused value assignments</source>
        <target state="new">Avoid unused value assignments</target>
        <note />
      </trans-unit>
      <trans-unit id="Code_block_preferences">
        <source>Code-block preferences</source>
        <target state="translated">Preferencias de bloque de código</target>
        <note />
      </trans-unit>
      <trans-unit id="Elsewhere">
        <source>Elsewhere</source>
        <target state="new">Elsewhere</target>
        <note />
      </trans-unit>
      <trans-unit id="Expected_string_or_char_literal">
        <source>Expected string or char literal</source>
        <target state="translated">Cadena o carácter literal esperados</target>
        <note />
      </trans-unit>
      <trans-unit id="Expression_bodied_members">
        <source>Expression-bodied members</source>
        <target state="translated">Miembros en cuerpo de expresión</target>
        <note />
      </trans-unit>
      <trans-unit id="For_built_in_types">
        <source>For built-in types</source>
        <target state="new">For built-in types</target>
        <note />
      </trans-unit>
      <trans-unit id="Ignore_spaces_in_declaration_statements">
        <source>Ignore spaces in declaration statements</source>
        <target state="new">Ignore spaces in declaration statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_block_contents">
        <source>Indent block contents</source>
        <target state="new">Indent block contents</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_contents">
        <source>Indent case contents</source>
        <target state="new">Indent case contents</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_contents_when_block">
        <source>Indent case contents (when block)</source>
        <target state="new">Indent case contents (when block)</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_case_labels">
        <source>Indent case labels</source>
        <target state="new">Indent case labels</target>
        <note />
      </trans-unit>
      <trans-unit id="Indent_open_and_close_braces">
        <source>Indent open and close braces</source>
        <target state="new">Indent open and close braces</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_cast">
        <source>Insert space after cast</source>
        <target state="new">Insert space after cast</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_colon_for_base_or_interface_in_type_declaration">
        <source>Insert space after colon for base or interface in type declaration</source>
        <target state="new">Insert space after colon for base or interface in type declaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_comma">
        <source>Insert space after comma</source>
        <target state="new">Insert space after comma</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_dot">
        <source>Insert space after dot</source>
        <target state="new">Insert space after dot</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_keywords_in_control_flow_statements">
        <source>Insert space after keywords in control flow statements</source>
        <target state="new">Insert space after keywords in control flow statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_after_semicolon_in_for_statement">
        <source>Insert space after semicolon in "for" statement</source>
        <target state="new">Insert space after semicolon in "for" statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_colon_for_base_or_interface_in_type_declaration">
        <source>Insert space before colon for base or interface in type declaration</source>
        <target state="new">Insert space before colon for base or interface in type declaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_comma">
        <source>Insert space before comma</source>
        <target state="new">Insert space before comma</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_dot">
        <source>Insert space before dot</source>
        <target state="new">Insert space before dot</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_open_square_bracket">
        <source>Insert space before open square bracket</source>
        <target state="new">Insert space before open square bracket</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_before_semicolon_in_for_statement">
        <source>Insert space before semicolon in "for" statement</source>
        <target state="new">Insert space before semicolon in "for" statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_between_method_name_and_its_opening_parenthesis1">
        <source>Insert space between method name and its opening parenthesis</source>
        <target state="new">Insert space between method name and its opening parenthesis</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_between_method_name_and_its_opening_parenthesis2">
        <source>Insert space between method name and its opening parenthesis</source>
        <target state="new">Insert space between method name and its opening parenthesis</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_argument_list_parentheses">
        <source>Insert space within argument list parentheses</source>
        <target state="new">Insert space within argument list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_argument_list_parentheses">
        <source>Insert space within empty argument list parentheses</source>
        <target state="new">Insert space within empty argument list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_parameter_list_parentheses">
        <source>Insert space within empty parameter list parentheses</source>
        <target state="new">Insert space within empty parameter list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_empty_square_brackets">
        <source>Insert space within empty square brackets</source>
        <target state="new">Insert space within empty square brackets</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parameter_list_parentheses">
        <source>Insert space within parameter list parentheses</source>
        <target state="new">Insert space within parameter list parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_space_within_parentheses">
        <source>Insert space within parentheses</source>
        <target state="new">Insert space within parentheses</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_spaces_within_square_brackets">
        <source>Insert spaces within square brackets</source>
        <target state="new">Insert spaces within square brackets</target>
        <note />
      </trans-unit>
      <trans-unit id="Label_Indentation">
        <source>Label Indentation</source>
        <target state="new">Label Indentation</target>
        <note />
      </trans-unit>
      <trans-unit id="Leave_block_on_single_line">
        <source>Leave block on single line</source>
        <target state="new">Leave block on single line</target>
        <note />
      </trans-unit>
      <trans-unit id="Leave_statements_and_member_declarations_on_the_same_line">
        <source>Leave statements and member declarations on the same line</source>
        <target state="new">Leave statements and member declarations on the same line</target>
        <note />
      </trans-unit>
      <trans-unit id="Namespace_declarations">
        <source>Namespace declarations</source>
        <target state="new">Namespace declarations</target>
        <note />
      </trans-unit>
      <trans-unit id="Null_checking_preferences">
        <source>Null-checking preferences</source>
        <target state="translated">Preferencias de comprobación de nulo</target>
        <note />
      </trans-unit>
      <trans-unit id="Pattern_matching_preferences">
        <source>Pattern matching preferences</source>
        <target state="translated">Preferencias de coincidencia de patrón</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_catch_on_new_line">
        <source>Place "catch" on new line</source>
        <target state="new">Place "catch" on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_else_on_new_line">
        <source>Place "else" on new line</source>
        <target state="new">Place "else" on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_finally_on_new_line">
        <source>Place "finally" on new line</source>
        <target state="new">Place "finally" on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_members_in_anonymous_types_on_new_line">
        <source>Place members in anonymous types on new line</source>
        <target state="new">Place members in anonymous types on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_members_in_object_initializers_on_new_line">
        <source>Place members in object initializers on new line</source>
        <target state="new">Place members in object initializers on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_open_brace_on_new_line">
        <source>Place open brace on new line</source>
        <target state="new">Place open brace on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Place_query_expression_clauses_on_new_line">
        <source>Place query expression clauses on new line</source>
        <target state="new">Place query expression clauses on new line</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_Utf8_string_literals">
        <source>Prefer UTF-8 string literals</source>
        <target state="new">Prefer UTF-8 string literals</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_braces">
        <source>Prefer braces</source>
        <target state="new">Prefer braces</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_conditional_delegate_call">
        <source>Prefer conditional delegate call</source>
        <target state="new">Prefer conditional delegate call</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_deconstructed_variable_declaration">
        <source>Prefer deconstructed variable declaration</source>
        <target state="new">Prefer deconstructed variable declaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_extended_property_pattern">
        <source>Prefer extended property pattern</source>
        <target state="new">Prefer extended property pattern</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_implicit_object_creation_when_type_is_apparent">
        <source>Prefer implicit object creation when type is apparent</source>
        <target state="new">Prefer implicit object creation when type is apparent</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_index_operator">
        <source>Prefer index operator</source>
        <target state="new">Prefer index operator</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_inlined_variable_declaration">
        <source>Prefer inlined variable declaration</source>
        <target state="new">Prefer inlined variable declaration</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_local_function_over_anonymous_function">
        <source>Prefer local function over anonymous function</source>
        <target state="new">Prefer local function over anonymous function</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_method_group_conversion">
        <source>Prefer method group conversion</source>
        <target state="new">Prefer method group conversion</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_null_check_over_type_check">
        <source>Prefer 'null' check over type check</source>
        <target state="new">Prefer 'null' check over type check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching">
        <source>Prefer pattern matching</source>
        <target state="new">Prefer pattern matching</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_as_with_null_check">
        <source>Prefer pattern matching over 'as' with 'null' check</source>
        <target state="new">Prefer pattern matching over 'as' with 'null' check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_is_with_cast_check">
        <source>Prefer pattern matching over 'is' with 'cast' check</source>
        <target state="new">Prefer pattern matching over 'is' with 'cast' check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_pattern_matching_over_mixed_type_check">
        <source>Prefer pattern matching over mixed type check</source>
        <target state="new">Prefer pattern matching over mixed type check</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_range_operator">
        <source>Prefer range operator</source>
        <target state="new">Prefer range operator</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_simple_default_expression">
        <source>Prefer simple 'default' expression</source>
        <target state="new">Prefer simple 'default' expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_simple_using_statement">
        <source>Prefer simple 'using' statement</source>
        <target state="new">Prefer simple 'using' statement</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_static_local_functions">
        <source>Prefer static local functions</source>
        <target state="new">Prefer static local functions</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_switch_expression">
        <source>Prefer switch expression</source>
        <target state="new">Prefer switch expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_throw_expression">
        <source>Prefer throw-expression</source>
        <target state="new">Prefer throw-expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_top_level_statements">
        <source>Prefer top-level statements</source>
        <target state="new">Prefer top-level statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_tuple_swap">
        <source>Prefer tuple swap</source>
        <target state="new">Prefer tuple swap</target>
        <note />
      </trans-unit>
      <trans-unit id="Preferred_using_directive_placement">
        <source>Preferred 'using' directive placement</source>
        <target state="new">Preferred 'using' directive placement</target>
        <note />
      </trans-unit>
      <trans-unit id="Set_spacing_for_operators">
        <source>Set spacing for operators</source>
        <target state="new">Set spacing for operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_accessors">
        <source>Use expression body for accessors</source>
        <target state="new">Use expression body for accessors</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_constructors">
        <source>Use expression body for constructors</source>
        <target state="new">Use expression body for constructors</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_indexers">
        <source>Use expression body for indexers</source>
        <target state="new">Use expression body for indexers</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_lambdas">
        <source>Use expression body for lambdas</source>
        <target state="new">Use expression body for lambdas</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_local_functions">
        <source>Use expression body for local functions</source>
        <target state="new">Use expression body for local functions</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_methods">
        <source>Use expression body for methods</source>
        <target state="new">Use expression body for methods</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_operators">
        <source>Use expression body for operators</source>
        <target state="new">Use expression body for operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_expression_body_for_properties">
        <source>Use expression body for properties</source>
        <target state="new">Use expression body for properties</target>
        <note />
      </trans-unit>
      <trans-unit id="When_variable_type_is_apparent">
        <source>When variable type is apparent</source>
        <target state="new">When variable type is apparent</target>
        <note />
      </trans-unit>
      <trans-unit id="_0_1_is_not_supported_in_this_version">
        <source>'{0}.{1}' is not supported in this version</source>
        <target state="translated">"{0}.{1}" no se admite en esta versión.</target>
        <note>{0}: A type name
{1}: A member name</note>
      </trans-unit>
      <trans-unit id="using_directive_preferences">
        <source>'using' directive preferences</source>
        <target state="translated">Preferencias de directiva "using"</target>
        <note>{Locked="using"} "using" is a C# keyword and should not be localized.</note>
      </trans-unit>
      <trans-unit id="var_preferences">
        <source>var preferences</source>
        <target state="translated">Preferencias de var</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>