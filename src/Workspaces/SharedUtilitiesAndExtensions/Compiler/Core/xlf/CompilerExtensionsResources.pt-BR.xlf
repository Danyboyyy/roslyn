<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../CompilerExtensionsResources.resx">
    <body>
      <trans-unit id="Absolute_path_expected">
        <source>Absolute path expected.</source>
        <target state="translated">Caminho absoluto esperado.</target>
        <note />
      </trans-unit>
      <trans-unit id="Abstract_Method">
        <source>Abstract Method</source>
        <target state="translated">Método Abstract</target>
        <note>{locked: abstract}{locked: method} These are keywords (unless the order of words or capitalization should be handled differently)</note>
      </trans-unit>
      <trans-unit id="Accessors">
        <source>Accessors</source>
        <target state="new">Accessors</target>
        <note />
      </trans-unit>
      <trans-unit id="All_methods">
        <source>All methods</source>
        <target state="new">All methods</target>
        <note />
      </trans-unit>
      <trans-unit id="Allow_multiple_blank_lines">
        <source>Allow multiple blank lines</source>
        <target state="new">Allow multiple blank lines</target>
        <note />
      </trans-unit>
      <trans-unit id="Allow_statement_immediately_after_block">
        <source>Allow statement immediately after block</source>
        <target state="new">Allow statement immediately after block</target>
        <note />
      </trans-unit>
      <trans-unit id="Always">
        <source>Always</source>
        <target state="new">Always</target>
        <note />
      </trans-unit>
      <trans-unit id="Always_for_clarity">
        <source>Always for clarity</source>
        <target state="new">Always for clarity</target>
        <note />
      </trans-unit>
      <trans-unit id="An_element_with_the_same_key_but_a_different_value_already_exists">
        <source>An element with the same key but a different value already exists.</source>
        <target state="translated">Um elemento com a mesma chave, mas um valor diferente já existe.</target>
        <note />
      </trans-unit>
      <trans-unit id="Analyzer_Prefer_auto_properties">
        <source>Prefer auto properties</source>
        <target state="new">Prefer auto properties</target>
        <note />
      </trans-unit>
      <trans-unit id="Anonymous_methods">
        <source>Anonymous methods</source>
        <target state="new">Anonymous methods</target>
        <note />
      </trans-unit>
      <trans-unit id="Anonymous_types">
        <source>Anonymous types</source>
        <target state="new">Anonymous types</target>
        <note />
      </trans-unit>
      <trans-unit id="Avoid_unused_parameters">
        <source>Avoid unused parameters</source>
        <target state="new">Avoid unused parameters</target>
        <note />
      </trans-unit>
      <trans-unit id="Before_and_after">
        <source>Insert spaces before and after binary operators</source>
        <target state="new">Insert spaces before and after binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Beginning_of_line">
        <source>Beginning of line</source>
        <target state="new">Beginning of line</target>
        <note />
      </trans-unit>
      <trans-unit id="Begins_with_I">
        <source>Begins with I</source>
        <target state="translated">Começa com I</target>
        <note>{locked:I}</note>
      </trans-unit>
      <trans-unit id="Block_scoped">
        <source>Block scoped</source>
        <target state="new">Block scoped</target>
        <note />
      </trans-unit>
      <trans-unit id="Class">
        <source>Class</source>
        <target state="new">Class</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Control_blocks">
        <source>Control blocks</source>
        <target state="new">Control blocks</target>
        <note />
      </trans-unit>
      <trans-unit id="Control_flow_statements">
        <source>Control flow statements</source>
        <target state="new">Control flow statements</target>
        <note />
      </trans-unit>
      <trans-unit id="Cr">
        <source>Carriage Return (\r)</source>
        <target state="new">Carriage Return (\r)</target>
        <note />
      </trans-unit>
      <trans-unit id="Crlf">
        <source>Carriage Return + New Line (\r\n)</source>
        <target state="new">Carriage Return + New Line (\r\n)</target>
        <note />
      </trans-unit>
      <trans-unit id="Delegate">
        <source>Delegate</source>
        <target state="new">Delegate</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Discard">
        <source>Discard</source>
        <target state="new">Discard</target>
        <note />
      </trans-unit>
      <trans-unit id="Do_not_prefer_this_or_Me">
        <source>Do not prefer 'this.' or 'Me.'</source>
        <target state="new">Do not prefer 'this.' or 'Me.'</target>
        <note />
      </trans-unit>
      <trans-unit id="End_of_line">
        <source>End of line</source>
        <target state="new">End of line</target>
        <note />
      </trans-unit>
      <trans-unit id="Enum">
        <source>Enum</source>
        <target state="new">Enum</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Error_severity">
        <source>Offending code is underlined with a red squiggle and marked by a small red box in the scroll bar.</source>
        <target state="new">Offending code is underlined with a red squiggle and marked by a small red box in the scroll bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="Event">
        <source>Event</source>
        <target state="new">Event</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Cast_is_redundant">
        <source>Cast is redundant.</source>
        <target state="translated">Conversão é redundante.</target>
        <note />
      </trans-unit>
      <trans-unit id="Events">
        <source>Events</source>
        <target state="new">Events</target>
        <note />
      </trans-unit>
      <trans-unit id="Expression_level_preferences">
        <source>Expression-level preferences</source>
        <target state="translated">Preferências de nível de expressão</target>
        <note />
      </trans-unit>
      <trans-unit id="Expressions">
        <source>Expressions</source>
        <target state="new">Expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="False">
        <source>False</source>
        <target state="new">False</target>
        <note />
      </trans-unit>
      <trans-unit id="Field_preferences">
        <source>Field preferences</source>
        <target state="translated">Preferências de campo</target>
        <note />
      </trans-unit>
      <trans-unit id="File_scoped">
        <source>File scoped</source>
        <target state="new">File scoped</target>
        <note />
      </trans-unit>
      <trans-unit id="Flush_left">
        <source>Place goto labels in leftmost column</source>
        <target state="new">Place goto labels in leftmost column</target>
        <note />
      </trans-unit>
      <trans-unit id="For_locals_parameters_and_members">
        <source>For locals, parameters and members</source>
        <target state="new">For locals, parameters and members</target>
        <note />
      </trans-unit>
      <trans-unit id="For_member_access_expressions">
        <source>For member access expressions</source>
        <target state="new">For member access expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="For_non_interface_members">
        <source>For non interface members</source>
        <target state="new">For non interface members</target>
        <note />
      </trans-unit>
      <trans-unit id="Ignore">
        <source>Ignore</source>
        <target state="new">Ignore</target>
        <note />
      </trans-unit>
      <trans-unit id="Ignore_binary_operator_spacing">
        <source>Ignore spaces around binary operators</source>
        <target state="new">Ignore spaces around binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="In_arithmetic_binary_operators">
        <source>In arithmetic operators</source>
        <target state="new">In arithmetic operators</target>
        <note />
      </trans-unit>
      <trans-unit id="In_other_binary_operators">
        <source>In other binary operators</source>
        <target state="new">In other binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="In_other_operators">
        <source>In other operators</source>
        <target state="new">In other operators</target>
        <note />
      </trans-unit>
      <trans-unit id="In_relational_binary_operators">
        <source>In relational operators</source>
        <target state="new">In relational operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Indentation_Size">
        <source>Indentation Size</source>
        <target state="new">Indentation Size</target>
        <note />
      </trans-unit>
      <trans-unit id="Indexers">
        <source>Indexers</source>
        <target state="new">Indexers</target>
        <note />
      </trans-unit>
      <trans-unit id="Insert_Final_Newline">
        <source>Insert Final Newline</source>
        <target state="new">Insert Final Newline</target>
        <note />
      </trans-unit>
      <trans-unit id="Inside_namespace">
        <source>Inside namespace</source>
        <target state="new">Inside namespace</target>
        <note />
      </trans-unit>
      <trans-unit id="Interface">
        <source>Interface</source>
        <target state="new">Interface</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Lambdas">
        <source>Lambdas</source>
        <target state="new">Lambdas</target>
        <note />
      </trans-unit>
      <trans-unit id="Language_keywords_vs_BCL_types_preferences">
        <source>Language keywords vs BCL types preferences</source>
        <target state="translated">Preferências de tipos BCL contra palavras-chave do idioma</target>
        <note />
      </trans-unit>
      <trans-unit id="Lf">
        <source>New Line (\n)</source>
        <target state="new">New Line (\n)</target>
        <note />
      </trans-unit>
      <trans-unit id="Local_functions">
        <source>Local functions</source>
        <target state="new">Local functions</target>
        <note />
      </trans-unit>
      <trans-unit id="Method">
        <source>Method</source>
        <target state="translated">método</target>
        <note>{locked:method} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Methods">
        <source>Methods</source>
        <target state="new">Methods</target>
        <note />
      </trans-unit>
      <trans-unit id="Missing_prefix_colon_0">
        <source>Missing prefix: '{0}'</source>
        <target state="translated">Prefixo ausente: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Missing_suffix_colon_0">
        <source>Missing suffix: '{0}'</source>
        <target state="translated">Sufixo ausente: '{0}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Modifier_preferences">
        <source>Modifier preferences</source>
        <target state="translated">Preferências de modificador</target>
        <note />
      </trans-unit>
      <trans-unit id="Naming_rules">
        <source>Naming rules</source>
        <target state="translated">Regras de nomenclatura</target>
        <note />
      </trans-unit>
      <trans-unit id="Naming_styles">
        <source>Naming styles</source>
        <target state="translated">Estilos de nomenclatura</target>
        <note />
      </trans-unit>
      <trans-unit id="Never">
        <source>Never</source>
        <target state="new">Never</target>
        <note />
      </trans-unit>
      <trans-unit id="Never_if_unnecessary">
        <source>Never if unnecessary</source>
        <target state="new">Never if unnecessary</target>
        <note />
      </trans-unit>
      <trans-unit id="New_Line">
        <source>New Line</source>
        <target state="new">New Line</target>
        <note />
      </trans-unit>
      <trans-unit id="New_line_preferences">
        <source>New line preferences</source>
        <target state="translated">Preferências de nova linha</target>
        <note />
      </trans-unit>
      <trans-unit id="No">
        <source>No</source>
        <target state="new">No</target>
        <note />
      </trans-unit>
      <trans-unit id="No_change">
        <source>Indent labels normally</source>
        <target state="new">Indent labels normally</target>
        <note />
      </trans-unit>
      <trans-unit id="Non_Field_Members">
        <source>Non-Field Members</source>
        <target state="translated">Membros Sem Campo</target>
        <note>{locked:field}</note>
      </trans-unit>
      <trans-unit id="Non_public_methods">
        <source>Non-public methods</source>
        <target state="new">Non-public methods</target>
        <note />
      </trans-unit>
      <trans-unit id="None_binary_operator_spacing">
        <source>Remove spaces before and after binary operators</source>
        <target state="new">Remove spaces before and after binary operators</target>
        <note />
      </trans-unit>
      <trans-unit id="Object_collection_array_initializers">
        <source>Object collection array initializers</source>
        <target state="new">Object collection array initializers</target>
        <note />
      </trans-unit>
      <trans-unit id="Omit_if_default">
        <source>Omit if default</source>
        <target state="new">Omit if default</target>
        <note />
      </trans-unit>
      <trans-unit id="One_less_than_current">
        <source>Place goto labels one indent less than current</source>
        <target state="new">Place goto labels one indent less than current</target>
        <note />
      </trans-unit>
      <trans-unit id="Operator_placement_when_wrapping">
        <source>Operator placement when wrapping</source>
        <target state="new">Operator placement when wrapping</target>
        <note />
      </trans-unit>
      <trans-unit id="Organize_usings">
        <source>Organize usings</source>
        <target state="translated">Organizar Usos</target>
        <note />
      </trans-unit>
      <trans-unit id="Outside_namespace">
        <source>Outside namespace</source>
        <target state="new">Outside namespace</target>
        <note />
      </trans-unit>
      <trans-unit id="Parameter_preferences">
        <source>Parameter preferences</source>
        <target state="translated">Preferências de parâmetro</target>
        <note />
      </trans-unit>
      <trans-unit id="Parentheses_preferences">
        <source>Parentheses preferences</source>
        <target state="translated">Preferências de parênteses</target>
        <note />
      </trans-unit>
      <trans-unit id="Pascal_Case">
        <source>Pascal Case</source>
        <target state="translated">Pascal Case</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_System_HashCode_in_GetHashCode">
        <source>Prefer 'System.HashCode' in 'GetHashCode'</source>
        <target state="new">Prefer 'System.HashCode' in 'GetHashCode'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_coalesce_expression">
        <source>Prefer coalesce expression</source>
        <target state="new">Prefer coalesce expression</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_collection_initializer">
        <source>Prefer collection initializer</source>
        <target state="new">Prefer collection initializer</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_compound_assignments">
        <source>Prefer compound assignments</source>
        <target state="new">Prefer compound assignments</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_conditional_expression_over_if_with_assignments">
        <source>Prefer conditional expression over 'if' with assignments</source>
        <target state="new">Prefer conditional expression over 'if' with assignments</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_conditional_expression_over_if_with_returns">
        <source>Prefer conditional expression over 'if' with returns</source>
        <target state="new">Prefer conditional expression over 'if' with returns</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_explicit_tuple_name">
        <source>Prefer explicit tuple name</source>
        <target state="new">Prefer explicit tuple name</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_explicit_type">
        <source>Prefer explicit type</source>
        <target state="new">Prefer explicit type</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_framework_type">
        <source>Prefer framework type</source>
        <target state="new">Prefer framework type</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_inferred_anonymous_type_member_names">
        <source>Prefer inferred anonymous type member names</source>
        <target state="new">Prefer inferred anonymous type member names</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_inferred_tuple_names">
        <source>Prefer inferred tuple element names</source>
        <target state="new">Prefer inferred tuple element names</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_is_null_for_reference_equality_checks">
        <source>Prefer 'is null' for reference equality checks</source>
        <target state="new">Prefer 'is null' for reference equality checks</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_namespace_and_folder_match_structure">
        <source>Prefer namespace and folder match structure</source>
        <target state="new">Prefer namespace and folder match structure</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_null_propagation">
        <source>Prefer null propagation</source>
        <target state="new">Prefer null propagation</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_object_initializer">
        <source>Prefer object initializer</source>
        <target state="new">Prefer object initializer</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_predefined_type">
        <source>Prefer predefined type</source>
        <target state="new">Prefer predefined type</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_readonly_fields">
        <source>Prefer readonly fields</source>
        <target state="new">Prefer readonly fields</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_simplified_boolean_expressions">
        <source>Prefer simplified boolean expressions</source>
        <target state="new">Prefer simplified boolean expressions</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_simplified_interpolation">
        <source>Prefer simplified interpolation</source>
        <target state="new">Prefer simplified interpolation</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_this_or_Me">
        <source>Prefer 'this.' or 'Me.'</source>
        <target state="new">Prefer 'this.' or 'Me.'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefer_var">
        <source>Prefer 'var'</source>
        <target state="new">Prefer 'var'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefix_0_does_not_match_expected_prefix_1">
        <source>Prefix '{0}' does not match expected prefix '{1}'</source>
        <target state="translated">O prefixo '{0}' não coincide com prefixo esperado '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="Prefix_0_is_not_expected">
        <source>Prefix '{0}' is not expected</source>
        <target state="translated">O prefixo '{0}' não é esperado</target>
        <note />
      </trans-unit>
      <trans-unit id="Private_Method">
        <source>Private Method</source>
        <target state="translated">Método Privado</target>
        <note>{locked: private}{locked: method} These are keywords (unless the order of words or capitalization should be handled differently)</note>
      </trans-unit>
      <trans-unit id="Private_or_Internal_Field">
        <source>Private or Internal Field</source>
        <target state="translated">Campo Privado ou Interno</target>
        <note>{locked: private}{locked: internal}{locked:field}</note>
      </trans-unit>
      <trans-unit id="Private_or_Internal_Static_Field">
        <source>Private or Internal Static Field</source>
        <target state="translated">Campo Privado ou Estático Interno</target>
        <note>{locked: private}{locked: internal}{locked:static}{locked:field}</note>
      </trans-unit>
      <trans-unit id="Properties">
        <source>Properties</source>
        <target state="new">Properties</target>
        <note />
      </trans-unit>
      <trans-unit id="Property">
        <source>Property</source>
        <target state="new">Property</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Public_or_Protected_Field">
        <source>Public or Protected Field</source>
        <target state="translated">Campo Protegido ou Público</target>
        <note>{locked: public}{locked: protected}{locked:field}</note>
      </trans-unit>
      <trans-unit id="Qualify_event_access_with_this_or_Me">
        <source>Qualify event access with 'this' or 'Me'</source>
        <target state="new">Qualify event access with 'this' or 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_field_access_with_this_or_Me">
        <source>Qualify field access with 'this' or 'Me'</source>
        <target state="new">Qualify field access with 'this' or 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_method_access_with_this_or_Me">
        <source>Qualify method access with 'this' or 'Me'</source>
        <target state="new">Qualify method access with 'this' or 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Qualify_property_access_with_this_or_Me">
        <source>Qualify property access with 'this' or 'Me'</source>
        <target state="new">Qualify property access with 'this' or 'Me'</target>
        <note />
      </trans-unit>
      <trans-unit id="Require_accessibility_modifiers">
        <source>Require accessibility modifiers</source>
        <target state="new">Require accessibility modifiers</target>
        <note />
      </trans-unit>
      <trans-unit id="Segment_size_must_be_power_of_2_greater_than_1">
        <source>Segment size must be power of 2 greater than 1</source>
        <target state="translated">O tamanho do segmento precisa ser na potência de 2 maior que 1</target>
        <note />
      </trans-unit>
      <trans-unit id="Silent_severity">
        <source>Non-visible to user. The diagnostic is reported to the IDE diagnostic engine, however.</source>
        <target state="new">Non-visible to user. The diagnostic is reported to the IDE diagnostic engine, however.</target>
        <note />
      </trans-unit>
      <trans-unit id="Space">
        <source>Use spaces</source>
        <target state="new">Use spaces</target>
        <note />
      </trans-unit>
      <trans-unit id="Specified_sequence_has_duplicate_items">
        <source>Specified sequence has duplicate items</source>
        <target state="translated">A sequência especificada tem itens duplicados</target>
        <note />
      </trans-unit>
      <trans-unit id="Static_Field">
        <source>Static Field</source>
        <target state="translated">Campo Estático</target>
        <note>{locked:static}{locked:field} (unless the capitalization should be handled differently)</note>
      </trans-unit>
      <trans-unit id="Static_Method">
        <source>Static Method</source>
        <target state="translated">Método Estático</target>
        <note>{locked: static}{locked: method} These are keywords (unless the order of words or capitalization should be handled differently)</note>
      </trans-unit>
      <trans-unit id="Struct">
        <source>Struct</source>
        <target state="new">Struct</target>
        <note>{locked} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Suggestion_severity">
        <source>Offending code is underlined with a gray squiggle and marked by a small gray box in the scroll bar.</source>
        <target state="new">Offending code is underlined with a gray squiggle and marked by a small gray box in the scroll bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="Suppression_preferences">
        <source>Suppression preferences</source>
        <target state="translated">Preferências de supressão</target>
        <note />
      </trans-unit>
      <trans-unit id="Symbol_specifications">
        <source>Symbol specifications</source>
        <target state="translated">Especificações de símbolo</target>
        <note />
      </trans-unit>
      <trans-unit id="Tab">
        <source>Use tabs</source>
        <target state="new">Use tabs</target>
        <note />
      </trans-unit>
      <trans-unit id="Tab_Size">
        <source>Tab Size</source>
        <target state="new">Tab Size</target>
        <note />
      </trans-unit>
      <trans-unit id="The_first_word_0_must_begin_with_a_lower_case_character">
        <source>The first word, '{0}', must begin with a lower case character</source>
        <target state="translated">A primeira palavra, '{0}', deve começar com um caractere minúsculo</target>
        <note />
      </trans-unit>
      <trans-unit id="The_first_word_0_must_begin_with_an_upper_case_character">
        <source>The first word, '{0}', must begin with an upper case character</source>
        <target state="translated">A primeira palavra, '{0}', deve começar com um caractere maiúsculo</target>
        <note />
      </trans-unit>
      <trans-unit id="These_non_leading_words_must_begin_with_a_lowercase_letter_colon_0">
        <source>These non-leading words must begin with a lowercase letter: {0}</source>
        <target state="translated">Essas palavras não iniciais devem começar com uma letra minúscula: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="These_non_leading_words_must_begin_with_an_upper_case_letter_colon_0">
        <source>These non-leading words must begin with an upper case letter: {0}</source>
        <target state="translated">Essas palavras não iniciais devem começar com uma letra maiúscula: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="These_words_cannot_contain_lower_case_characters_colon_0">
        <source>These words cannot contain lower case characters: {0}</source>
        <target state="translated">Essas palavras não podem conter caracteres minúsculos: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="These_words_cannot_contain_upper_case_characters_colon_0">
        <source>These words cannot contain upper case characters: {0}</source>
        <target state="translated">Essas palavras não podem conter caracteres maiúsculos: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="These_words_must_begin_with_upper_case_characters_colon_0">
        <source>These words must begin with upper case characters: {0}</source>
        <target state="translated">Essas palavras devem começar com caracteres maiúsculos: {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="Type_casts">
        <source>Type casts</source>
        <target state="new">Type casts</target>
        <note />
      </trans-unit>
      <trans-unit id="Types">
        <source>Types</source>
        <target state="translated">Tipos</target>
        <note>{locked:types} unless the capitalization should be handled differently</note>
      </trans-unit>
      <trans-unit id="Unused_local">
        <source>Unused local</source>
        <target state="new">Unused local</target>
        <note />
      </trans-unit>
      <trans-unit id="Use_Tabs">
        <source>Use Tabs</source>
        <target state="new">Use Tabs</target>
        <note />
      </trans-unit>
      <trans-unit id="Warning_severity">
        <source>Offending code is underlined with a green squiggle and marked by a small green box in the scroll bar.</source>
        <target state="new">Offending code is underlined with a green squiggle and marked by a small green box in the scroll bar.</target>
        <note />
      </trans-unit>
      <trans-unit id="When_on_multiple_lines">
        <source>When on multiple lines</source>
        <target state="new">When on multiple lines</target>
        <note />
      </trans-unit>
      <trans-unit id="When_on_single_line">
        <source>When on single line</source>
        <target state="new">When on single line</target>
        <note />
      </trans-unit>
      <trans-unit id="When_possible">
        <source>When possible</source>
        <target state="new">When possible</target>
        <note />
      </trans-unit>
      <trans-unit id="Yes">
        <source>Yes</source>
        <target state="new">Yes</target>
        <note />
      </trans-unit>
      <trans-unit id="this_dot_and_Me_dot_preferences">
        <source>this. and Me. preferences</source>
        <target state="translated">Preferências</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>